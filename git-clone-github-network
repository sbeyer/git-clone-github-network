#!/usr/bin/env ruby
# Clone a repository on GitHub and all its forks (and their forks, recursively) into one repository
#
# Tested with git 2.1.4
#
# Released into the public domain. There is no warranty for any damage
# that may occur by using this script!
#
# Author: Stephan Beyer

GithubAPI = 'https://api.github.com/repos'

require 'json'
require 'open-uri'
require 'fileutils'

def get_next_link(line)
	if line
		m = line.match(/^<([^>]*)>; rel="next",*/)
		m[1] if m
	end
end

def api_call(url)
	response = []
	while url
		open(url) do |f|
			fail if f.status[0] != '200'
			fail if f.content_type != 'application/json'
			json = JSON.parse(f.read)
			if json.is_a?(Array)
				response.concat(json)
				url = get_next_link(f.meta['link'])
			else
				return json
			end
		end
	end
	response
end

def get_forks_of(repo)
	forks = [[repo['full_name'], repo['clone_url']]]
	if (repo['forks_count'] > 0)
		puts "Getting information on #{repo['forks_count']} direct forks of #{repo['full_name']} ..."

		response = api_call(repo['forks_url'])
		response.each do |forkrepo|
			forks.concat(get_forks_of(forkrepo))
		end
	end
	forks
end

if ARGV.length != 1
	STDERR.puts "Usage: #{$0} user/repo"
	exit 1
end

repo = api_call("#{GithubAPI}/#{ARGV[0]}")
puts "Warning: the repository is itself a fork!" if repo['fork']

forks = get_forks_of(repo)

puts "Now invoking git to pull #{forks.length} repositories"
